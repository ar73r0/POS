name: CI/CD Pipeline for Odoo POS

on:
  push:
    branches: [ main ]

jobs:
  # ──────────────────────────────
  #  1. Run unit-tests with pytest
  # ──────────────────────────────
  run-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install -r odoo/requirements.txt
          pip install pytest

      - name: Load test environment variables
        run: |
          if [ -f tests/.env ]; then
            set -o allexport
            source tests/.env
            set +o allexport
          fi

      - name: Run tests with pytest
        run: |
          pytest tests --maxfail=1 --disable-warnings -v

  # ──────────────────────────────
  #  2. Build & push Docker image
  #     (runs only if tests passed)
  # ──────────────────────────────
  build-and-push:
    needs: run-tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Verify directory structure
        run: |
          test -d odoo || (echo "Error: 'odoo' directory not found!" && exit 1)
          test -f docker-compose.yml || (echo "Error: 'docker-compose.yml' not found!" && exit 1)
          test -f odoo/config/odoo.conf || (echo "Error: 'odoo.conf' not found in odoo/config/'!" && exit 1)
          test -f odoo/requirements.txt || (echo "Error: 'requirements.txt' not found in odoo/!" && exit 1)

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_KEY }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USER }}/attendify_pos:latest -f odoo/Dockerfile .
          docker push ${{ secrets.DOCKER_USER }}/attendify_pos:latest

      - name: Deploy to server via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host:     ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key:      ${{ secrets.SERVER_SSH_KEY }}
          port:     60022
          script: |
            cd ~/attendify/POS
            docker compose pull
            git reset --hard HEAD
            git pull origin main
            docker compose up -d --remove-orphans
